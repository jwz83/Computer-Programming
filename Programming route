
freecodecamp
intermediate javascript
https://github.com/getify/You-Dont-Know-JS (book)
--This You Don’t Know JavaScript book series offers a contrary challenge: 
--learn and deeply understand all of JavaScript, even and especially “The Tough Parts”.
https://eloquentjavascript.net/Eloquent_JavaScript.pdf

030412018: learning to research!!
object oriented javascript & udacity (27 hour (check free hours (Approx. 5 Week
SKILL LEVEL
 Intermediate))

https://frontendmasters.com/learn/professional/ via there to names to github (free courses in this fashion)


copies:
I came across this thread while working on the random quote machine. I found this free quote API source: https://quotesondesign.com/api-v4-0/
You will want to use the $.ajax call and set cache to false instead of $.getJSON. If you don't set cache to false, you won't get a new quote when you click your button.

https://crossorigin.me/

https://github.com/natetyler/wikiquotes-api/blob/master/wikiquote-api.js

https://www.mediawiki.org/wiki/API:Main_page

codepen.io


https://quotesondesign.com/api-v4-0/
https://forismatic.com/en/api/ ||https://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=jsonp&jsonp=?

https://developer.wordpress.org/rest-api/

https://css-tricks.com/using-the-wp-api-to-fetch-posts/


http://jquery.com/



https://classroom.udacity.com ,,  Only the theory, and if it is too much to handle, i use google.

https://www.quora.com/What-are-good-JavaScript-Books-for-an-Intermediate-programmer


https://courses.edx.org/courses/course-v1:IITBombayX+CS101.2x+1T2018/courseware/2185831b0a294544bb46084ec4ff0a82/b5e3252bda4d4325b6d6a6b65627f576/
Starting at: https://courses.edx.org/courses/course-v1:IITBombayX+CS101.2x+1T2018/courseware/a71234edfd4f465e8d3e7e0082d04540/bb1c02bd7cca406fa4545e63ed53d584/?child=first

www.htdp.org/ How to Design Programs

https://www.youtube.com/watch?v=FYXpOjwYzcs&list=PLFjq8z-aGyQ4gTpuAhnPEQBOz7Xz7wn_m
Functional programming

https://imperavi.com/kube/ javascript 
Kube — CSS & JS Framework
For professional developers and designers alike

https://www.json.org/json-nl.html

github JSON-js/json2.js
https://www.json.org/json-nl.html
--

Luckily, smart folks like John-David Dalton and Mathias Bynens do understand these concepts, and wrote a statistically sound benchmarking tool called Benchmark.js (http://benchmarkjs.com/). So I can end the suspense by simply saying: “just use that tool.”

I won’t repeat their whole documentation for how Benchmark.js works; they have fantastic API Docs (http://benchmarkjs.com/docs) you should read. Also there are some great (http://calendar.perfplanet.com/2010/bulletproof-javascript-benchmarks/) writeups (http://monsur.hossa.in/2012/12/11/benchmarkjs.html) on more of the details and methodology.

--

Performance/ing library
https://github.com/petkaantonov

http://es6-features.org
https://developer.mozilla.org/en-US/docs/Web/JavaScript
https://github.com/fbb-git/cppannotations/releases
https://github.com/fbb-git/cppannotations-zip

https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/lecture-videos/
https://stackoverflow.com/questions/2307283/what-does-olog-n-mean-exactly
https://en.wikipedia.org/wiki/Logarithm
http://people.seas.harvard.edu/~minilek/cs224/fall14/lec.html Advanced algorithms

http://opendatastructures.org


https://www.quora.com/What-are-some-best-schools-for-a-masters-program-in-Theoretical-Computer-Science

https://www.google.nl/search?q=best+javascript+api
https://tutorialzine.com/2017/04/10-machine-learning-examples-in-javascript
https://www.oreilly.com/programming/free/files/a-whirlwind-tour-of-python.pdf

https://www.python.org/dev/peps/
PEP 0 -- Index of Python Enhancement Proposals (PEPs)

http://www.aosabook.org/en/index.html
